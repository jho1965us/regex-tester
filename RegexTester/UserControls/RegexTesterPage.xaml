<UserControl x:Class="Sharomank.RegexTester.RegexTesterPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:common="clr-namespace:Sharomank.RegexTester.Common"
             xmlns:converters="clr-namespace:Sharomank.RegexTester.Converters"
             xmlns:uc="clr-namespace:Sharomank.RegexTester"
             xmlns:cbc="clr-namespace:CodeBoxControl;assembly=CodeBoxControl"
             mc:Ignorable="d" 
             FontSize="12"
             Name="RegexTesterControl"
             FocusManager.FocusedElement="{Binding ElementName=rtbInputRegex}" KeyDown="RegexTesterControl_KeyDown" Unloaded="RegexTesterControl_Unloaded" Loaded="RegexTesterControl_Loaded">
    <UserControl.Resources>
        <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style x:Key="CheckBox" TargetType="CheckBox">
            <Setter Property="Margin" Value="5"></Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="DarkBlue" />
                    <Setter Property="Cursor" Value="Help" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="GroupBox" TargetType="GroupBox">
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Foreground" Value="DarkBlue"></Setter>
        </Style>
        <Style x:Key="toggleStyle" BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type RadioButton}">
            <Setter Property="Padding" Value="5 3" />
            <Setter Property="Margin" Value="3" />
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="Foreground" Value="Gray" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="FontWeight" Value="Bold" />
                    <Setter Property="Foreground" Value="DarkBlue" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="toggleCheckBox" BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type CheckBox}">
            <Setter Property="Padding" Value="5 3" />
            <Setter Property="Margin" Value="3" />
            <Setter Property="Cursor" Value="Help" />
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="Foreground" Value="Gray" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="FontWeight" Value="Bold" />
                    <Setter Property="Foreground" Value="Green" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="commandButton" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="3" />
            <Setter Property="BorderBrush" Value="Gray" />
        </Style>
    </UserControl.Resources>
    <UserControl.DataContext>
        <common:RegexTesterPageViewModel/>
    </UserControl.DataContext>
    <Grid Name="RootGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" MinHeight="30" ></RowDefinition>
            <RowDefinition Height="auto" MinHeight="116" MaxHeight="500" ></RowDefinition>
            <RowDefinition Height="3"></RowDefinition>
            <RowDefinition Height="*" MinHeight="150"></RowDefinition>
            <RowDefinition Height="auto" MinHeight="26"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal">
                <RadioButton Name="rbtnMatch" GroupName="mode" Style="{StaticResource toggleStyle}" Content="MATCH" IsChecked="True" Checked="ModeItem_Checked" />
                <RadioButton Name="rbtnReplace" GroupName="mode" Style="{StaticResource toggleStyle}" Content="REPLACE" Checked="ModeItem_Checked" />
                <RadioButton Name="rbtnSplitMode" GroupName="mode" Style="{StaticResource toggleStyle}" Content="SPLIT" Checked="ModeItem_Checked" />
                <ComboBox Name="cbOutputMode" Margin="3" Height="36" VerticalContentAlignment="Center" SelectionChanged="cbOutputMode_SelectionChanged">
                    <ComboBoxItem Tag="0" IsSelected="True">
                        <TextBlock>OUTPUT MODE: <Bold>Default</Bold></TextBlock>
                    </ComboBoxItem>
                    <ComboBoxItem Tag="1">
                        <TextBlock>OUTPUT MODE: <Bold>C# sample</Bold></TextBlock>
                    </ComboBoxItem>
                </ComboBox>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Column="2">
                <CheckBox Name="cbAutorun" IsChecked="{Binding Autorun, Mode=TwoWay}" Style="{StaticResource toggleCheckBox}" ToolTip="Ctrl + Shift + A">AUTORUN</CheckBox>
                <CheckBox Name="cbOptimize" IsChecked="{Binding Optimize, Mode=TwoWay}" Style="{StaticResource toggleCheckBox}" ToolTip="OPTIMIZE mode shows only first 1000 chars and add warning in the end of output data." Click="CheckBox_Click">OPTIMIZE</CheckBox>
                <Button Name="btnCommandSave" Tag="command-save" Style="{StaticResource commandButton}" ToolTip="Save (Ctrl + S)" Click="btnCommand_Click">
                    <Image Stretch="None" Source="..\Resources\commands\save.png" />
                </Button>
            </StackPanel>
        </Grid>

        <GroupBox Name="gbRegexExpression" Grid.Row="1" Header="Regex Expression" Style="{StaticResource GroupBox}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Name="RegexRowReplace" Height="*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <TextBlock VerticalAlignment="Center" FontWeight="Bold" Foreground="Black" Text="Match regex: " />
                <RichTextBox Name="rtbInputRegex" Grid.Column="1" Padding="2" Margin="2" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" FontSize="16" Block.LineHeight="2" ToolTip="Type regular expression in field." TextChanged="TextChangedAutoRunEventHandler"/>

                <TextBlock Name="tblockInputReplace" VerticalAlignment="Center" FontWeight="Bold" Foreground="Black" Grid.Row="1" Text="Replacement format: " />
                <RichTextBox Name="rtbInputReplace" Grid.Column="1" Grid.Row="1" Padding="2" Margin="2" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" ToolTip="Use $[groupname] format to get its value. The default group name is 1, 2, 3... etc. (if it wasn't set any other group name)." FontSize="16" Block.LineHeight="2" TextChanged="TextChangedAutoRunEventHandler"/>

                <Button Name="btnMatch" Grid.Column="2" Grid.RowSpan="2" IsDefault="True" Margin="2" Padding="5 3" ToolTip="Ctrl + P" Click="btnMatch_Click">RUN</Button>

                <WrapPanel Grid.Row="2" Grid.ColumnSpan="3" Orientation="Horizontal">
                    <CheckBox Name="cbMultiline"
                                Content="Multiline"
                                Style="{StaticResource toggleCheckBox}"
                                Click="CheckBox_Click">
                        <CheckBox.ToolTip>
                            <TextBlock>
                                Multiline mode. Changes the meaning of ^ and $ so they match at the beginning and end,
                                <LineBreak />
                                respectively, of any line, and not just the beginning and end of the entire string.
                            </TextBlock>
                        </CheckBox.ToolTip>
                    </CheckBox>
                    <CheckBox Name="cbSingleline"
                                Content="Singleline"
                                ToolTip="Specifies single-line mode. Changes the meaning of the dot (.) so it matches every character (instead of every character except \n)."
                                Style="{StaticResource toggleCheckBox}"
                                IsEnabled="{Binding ElementName=cbECMAScript, Path=IsChecked, Converter={converters:InverseBooleanConverter}}"
                                Click="CheckBox_Click">
                    </CheckBox>
                    <CheckBox Name="cbIgnoreCase"
                                Content="IgnoreCase"
                                ToolTip="Specifies case-insensitive matching."
                                Style="{StaticResource toggleCheckBox}"
                                Click="CheckBox_Click">
                    </CheckBox>
                    <CheckBox Name="cbIgnorePatternWhitespace"
                                Content="IgnorePatternWhitespace"
                                Style="{StaticResource toggleCheckBox}"
                                IsEnabled="{Binding ElementName=cbECMAScript, Path=IsChecked, Converter={converters:InverseBooleanConverter}}"
                                Click="CheckBox_Click">
                        <CheckBox.ToolTip>
                            <TextBlock>
                                Eliminates unescaped white space from the pattern and enables comments marked with #.
                                <LineBreak />
                                However, the IgnorePatternWhitespace value does not affect or eliminate white space in character classes.
                            </TextBlock>
                        </CheckBox.ToolTip>
                    </CheckBox>
                    <CheckBox Name="cbCultureInvariant"
                                Content="CultureInvariant"
                                Style="{StaticResource toggleCheckBox}"
                                IsEnabled="{Binding ElementName=cbECMAScript, Path=IsChecked, Converter={converters:InverseBooleanConverter}}"
                                Click="CheckBox_Click">
                        <CheckBox.ToolTip>
                            <TextBlock>
                                Specifies that cultural differences in language is ignored.
                                <LineBreak />
                                See Performing Culture-Insensitive Operations in the RegularExpressions Namespace for more information.
                            </TextBlock>
                        </CheckBox.ToolTip>
                    </CheckBox>
                    <CheckBox Name="cbExplicitCapture"
                                Content="ExplicitCapture"
                                Style="{StaticResource toggleCheckBox}"
                                IsEnabled="{Binding ElementName=cbECMAScript, Path=IsChecked, Converter={converters:InverseBooleanConverter}}"
                                Click="CheckBox_Click">
                        <CheckBox.ToolTip>
                            <TextBlock>
                                Specifies that the only valid captures are explicitly named or numbered groups of the form (?&lt;name&gt;…).
                                <LineBreak />
                                This allows unnamed parentheses to act as noncapturing groups without the syntactic clumsiness of the expression (?:…).
                            </TextBlock>
                        </CheckBox.ToolTip>
                    </CheckBox>
                    <CheckBox Name="cbRightToLeft"
                                Content="RightToLeft"
                                ToolTip="Specifies that the search will be from right to left instead of from left to right."
                                Style="{StaticResource toggleCheckBox}"
                                IsEnabled="{Binding ElementName=cbECMAScript, Path=IsChecked, Converter={converters:InverseBooleanConverter}}"
                                Click="CheckBox_Click">
                    </CheckBox>
                    <CheckBox Name="cbECMAScript"
                                Content="ECMAScript"
                                Style="{StaticResource toggleCheckBox}"
                                Click="CheckBox_Click">
                        <CheckBox.ToolTip>
                            <TextBlock>
                                Enables ECMAScript-compliant behavior for the expression.
                                <LineBreak />
                                This value can be used only in conjunction with the IgnoreCase, Multiline, and Compiled values.
                                <LineBreak />
                                The use of this value with any other values results in an exception.
                            </TextBlock>
                        </CheckBox.ToolTip>
                    </CheckBox>
                    <CheckBox Name="cbCompiled"
                                Content="Compiled"
                                Style="{StaticResource toggleCheckBox}"
                                Click="CheckBox_Click">
                        <CheckBox.ToolTip>
                            <TextBlock>
                                Specifies that the regular expression is compiled to an assembly.
                                <LineBreak /> 
                                This yields faster execution but increases startup time.
                                <LineBreak /> 
                                This value should not be assigned to the Options property when calling the CompileToAssembly method.
                            </TextBlock>
                        </CheckBox.ToolTip>
                    </CheckBox>
                </WrapPanel>
            </Grid>
        </GroupBox>

        <GridSplitter Grid.Row="2" Height="3" HorizontalAlignment="Stretch" ResizeDirection="Rows" Background="DarkGray" />

        <Grid Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" MinHeight="50"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="*" MinHeight="50"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="*" MinHeight="50"></RowDefinition>
            </Grid.RowDefinitions>
            <GroupBox Name="gbInput" Header="Input text" Style="{StaticResource GroupBox}">
                <cbc:CodeBox Name="tbInputText"
                         AcceptsReturn="True"
                         AcceptsTab="True"
                         VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto" />
            </GroupBox>

            <GridSplitter ResizeDirection="Rows" Grid.Row="1" HorizontalAlignment="Stretch" Height="3" Background="DarkGray" />

            <GroupBox Name="gbOutput" Header="Output result" Grid.Row="2" Style="{StaticResource GroupBox}">
                <cbc:CodeBox Name="tbOutputText"
                         IsReadOnly="True"
                         IsUndoEnabled="False"
                         VerticalScrollBarVisibility="Visible"
                         HorizontalScrollBarVisibility="Auto"
                         Text="{Binding OutputText, Mode=OneWay}" />
            </GroupBox>

            <GridSplitter ResizeDirection="Rows" Grid.Row="3" HorizontalAlignment="Stretch" Height="3" Background="DarkGray" />

            <GroupBox Name="gbMatches" Header="Matches array" Grid.Row="4" Style="{StaticResource GroupBox}">
                <uc:RegexTesterMatches x:Name="regexTesterMatches" SelectedItemChanged="regexTesterMatches_SelectedItemChanged"/>
            </GroupBox>
        </Grid>

        <StatusBar Grid.Row="4" FontSize="{Binding ElementName=RegexTesterControl, Path=FontSize}">
            <StatusBarItem>
                <TextBlock FontWeight="Bold" Margin="2">Total count:</TextBlock>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Name="tbMatchesCount" FontWeight="Bold" Margin="2" Text="{Binding Count, Mode=OneWay}" Foreground="DarkBlue" />
            </StatusBarItem>

            <StatusBarItem>
                <TextBlock Name="tbSystemInfo" Margin="10 0 0 0" FontWeight="Bold"
                           Foreground="{Binding StatusBrush, Mode=OneWay}"
                           Text="{Binding Status, Mode=OneWay}"
                           ToolTip="{Binding StatusTooltip, Mode=OneWay}"></TextBlock>
            </StatusBarItem>

            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="2" Foreground="DarkBlue">Font Size:</TextBlock>
                    <Slider Minimum="12" Maximum="20" TickFrequency="1" Width="150"  VerticalAlignment="Center" Value="{Binding ElementName=RegexTesterControl, Path=FontSize}" />
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</UserControl>
